<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_lorentz_sphere" kind="class" language="C++" prot="public">
    <compoundname>LorentzSphere</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_lorentz_sphere_1aad4e5be48533b7f7dd66e35f434e22c9" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double LorentzSphere::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="21" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_lorentz_sphere_1abab9c18f82bf1212843d0afeab8747f1" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double LorentzSphere::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="22" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_lorentz_sphere_1a539840f1b009fec674f5e0456b182056" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double LorentzSphere::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="23" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_lorentz_sphere_1aeaae15914ea80ac01438612b8478fbe1" prot="private" static="no" mutable="no">
        <type><ref refid="class_sample" kindref="compound">Sample</ref></type>
        <definition>Sample LorentzSphere::sample</definition>
        <argsstring></argsstring>
        <name>sample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="24" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_lorentz_sphere_1ad08cd81b5ed9f0892012db13f9af9001" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double LorentzSphere::radius</definition>
        <argsstring></argsstring>
        <name>radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="25" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_lorentz_sphere_1a38413057c167ac5a457b5b5dd512c192" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_dipole" kindref="compound">Dipole</ref> &gt;</type>
        <definition>std::vector&lt;Dipole&gt; LorentzSphere::dipoles</definition>
        <argsstring></argsstring>
        <name>dipoles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="27" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_lorentz_sphere_1a00145dd3c1b3cd744f856b0518264d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LorentzSphere::LorentzSphere</definition>
        <argsstring>(double x, double y, double z, Sample sampleIn, double radiusIn)</argsstring>
        <name>LorentzSphere</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="class_sample" kindref="compound">Sample</ref></type>
          <declname>sampleIn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radiusIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="31" column="1" bodyfile="MuDip/LorentzSphere.cpp" bodystart="6" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_lorentz_sphere_1a7f5c281dcbdada41e5d7db5404dba8ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LorentzSphere::setX</definition>
        <argsstring>(double xIn)</argsstring>
        <name>setX</name>
        <param>
          <type>double</type>
          <declname>xIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="34" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_lorentz_sphere_1a94384f19a95a2013058b7cdec527a96a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LorentzSphere::setY</definition>
        <argsstring>(double yIn)</argsstring>
        <name>setY</name>
        <param>
          <type>double</type>
          <declname>yIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="35" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_lorentz_sphere_1a17f74d7f14c98cd51a085814517d8628" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LorentzSphere::setZ</definition>
        <argsstring>(double zIn)</argsstring>
        <name>setZ</name>
        <param>
          <type>double</type>
          <declname>zIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="36" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_lorentz_sphere_1a66f1189716e125df1b32875e21eb311a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LorentzSphere::setSample</definition>
        <argsstring>(Sample sampleIn)</argsstring>
        <name>setSample</name>
        <param>
          <type><ref refid="class_sample" kindref="compound">Sample</ref></type>
          <declname>sampleIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="37" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_lorentz_sphere_1a24e6213413e512ea209b1ecfaa074690" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LorentzSphere::setRadius</definition>
        <argsstring>(double radiusIn)</argsstring>
        <name>setRadius</name>
        <param>
          <type>double</type>
          <declname>radiusIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="38" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_lorentz_sphere_1a46ca3f3511a6a87723644d350fbb66ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double LorentzSphere::getX</definition>
        <argsstring>()</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="42" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_lorentz_sphere_1adc58278b6a0c645e6e0c5fd25fd79126" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double LorentzSphere::getY</definition>
        <argsstring>()</argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="43" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_lorentz_sphere_1a5c195aa98a61f40c1c08ca1f9e5cb210" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double LorentzSphere::getZ</definition>
        <argsstring>()</argsstring>
        <name>getZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="44" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_lorentz_sphere_1a92a635f089c0e5c5a2960518750f4c42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double LorentzSphere::getRadius</definition>
        <argsstring>()</argsstring>
        <name>getRadius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="45" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_lorentz_sphere_1aa65e38a2683e00d95971f5ebfcc20b7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_dipole" kindref="compound">Dipole</ref> &gt;</type>
        <definition>std::vector&lt;Dipole&gt; LorentzSphere::getDipoles</definition>
        <argsstring>()</argsstring>
        <name>getDipoles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="46" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_lorentz_sphere_1a58e768d89c89cbb12759c49d36f0c9c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; LorentzSphere::calculateDipoleField</definition>
        <argsstring>()</argsstring>
        <name>calculateDipoleField</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the dipole field by summing up the contributions from the individual dipoles within the Lorentz sphere. <simplesect kind="return"><para>The dipole field as a vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="48" column="1" bodyfile="MuDip/LorentzSphere.cpp" bodystart="59" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_lorentz_sphere_1a061f2c2d2635348d94e14371a32f5758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; LorentzSphere::calculateLorentzField</definition>
        <argsstring>()</argsstring>
        <name>calculateLorentzField</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the Lorentz field for the Lorentz sphere. <simplesect kind="return"><para>The Lorentz field as a vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/LorentzSphere.h" line="49" column="1" bodyfile="MuDip/LorentzSphere.cpp" bodystart="80" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="MuDip/LorentzSphere.h" line="18" column="1" bodyfile="MuDip/LorentzSphere.h" bodystart="16" bodyend="51"/>
    <listofallmembers>
      <member refid="class_lorentz_sphere_1a58e768d89c89cbb12759c49d36f0c9c0" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>calculateDipoleField</name></member>
      <member refid="class_lorentz_sphere_1a061f2c2d2635348d94e14371a32f5758" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>calculateLorentzField</name></member>
      <member refid="class_lorentz_sphere_1a38413057c167ac5a457b5b5dd512c192" prot="private" virt="non-virtual"><scope>LorentzSphere</scope><name>dipoles</name></member>
      <member refid="class_lorentz_sphere_1aa65e38a2683e00d95971f5ebfcc20b7e" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>getDipoles</name></member>
      <member refid="class_lorentz_sphere_1a92a635f089c0e5c5a2960518750f4c42" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>getRadius</name></member>
      <member refid="class_lorentz_sphere_1a46ca3f3511a6a87723644d350fbb66ca" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>getX</name></member>
      <member refid="class_lorentz_sphere_1adc58278b6a0c645e6e0c5fd25fd79126" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>getY</name></member>
      <member refid="class_lorentz_sphere_1a5c195aa98a61f40c1c08ca1f9e5cb210" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>getZ</name></member>
      <member refid="class_lorentz_sphere_1a00145dd3c1b3cd744f856b0518264d44" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>LorentzSphere</name></member>
      <member refid="class_lorentz_sphere_1ad08cd81b5ed9f0892012db13f9af9001" prot="private" virt="non-virtual"><scope>LorentzSphere</scope><name>radius</name></member>
      <member refid="class_lorentz_sphere_1aeaae15914ea80ac01438612b8478fbe1" prot="private" virt="non-virtual"><scope>LorentzSphere</scope><name>sample</name></member>
      <member refid="class_lorentz_sphere_1a24e6213413e512ea209b1ecfaa074690" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>setRadius</name></member>
      <member refid="class_lorentz_sphere_1a66f1189716e125df1b32875e21eb311a" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>setSample</name></member>
      <member refid="class_lorentz_sphere_1a7f5c281dcbdada41e5d7db5404dba8ab" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>setX</name></member>
      <member refid="class_lorentz_sphere_1a94384f19a95a2013058b7cdec527a96a" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>setY</name></member>
      <member refid="class_lorentz_sphere_1a17f74d7f14c98cd51a085814517d8628" prot="public" virt="non-virtual"><scope>LorentzSphere</scope><name>setZ</name></member>
      <member refid="class_lorentz_sphere_1aad4e5be48533b7f7dd66e35f434e22c9" prot="private" virt="non-virtual"><scope>LorentzSphere</scope><name>x</name></member>
      <member refid="class_lorentz_sphere_1abab9c18f82bf1212843d0afeab8747f1" prot="private" virt="non-virtual"><scope>LorentzSphere</scope><name>y</name></member>
      <member refid="class_lorentz_sphere_1a539840f1b009fec674f5e0456b182056" prot="private" virt="non-virtual"><scope>LorentzSphere</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

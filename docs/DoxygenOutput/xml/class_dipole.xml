<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_dipole" kind="class" language="C++" prot="public">
    <compoundname>Dipole</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_dipole_1a2ab7b7de768f7eb6c81882a174fec994" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Dipole::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="20" column="1" bodyfile="MuDip/Dipole.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dipole_1a14a22d6575e62c028b28e574b5b44e8e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Dipole::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="21" column="1" bodyfile="MuDip/Dipole.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dipole_1a670a668fa00c10d6aca4e70a0d4d6be0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Dipole::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="22" column="1" bodyfile="MuDip/Dipole.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dipole_1ad4e670e8a35f7c708ae56d21f6496802" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Dipole::moment</definition>
        <argsstring></argsstring>
        <name>moment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="23" column="1" bodyfile="MuDip/Dipole.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dipole_1a5979595c700fb139b1554e20f1e3b792" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Dipole::latticeConstant</definition>
        <argsstring></argsstring>
        <name>latticeConstant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="24" column="1" bodyfile="MuDip/Dipole.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_dipole_1a84a9daae2bdc84641ad90e0bcfb71e84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Dipole::Dipole</definition>
        <argsstring>(double xIn, double yIn, double zIn, std::vector&lt; double &gt; momentIn, double latticeConstantIn)</argsstring>
        <name>Dipole</name>
        <param>
          <type>double</type>
          <declname>xIn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yIn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>zIn</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>momentIn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>latticeConstantIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="27" column="1" bodyfile="MuDip/Dipole.cpp" bodystart="8" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_dipole_1aaa7ffe92c7d2499a485e75c8c77272b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Dipole::setX</definition>
        <argsstring>(double xIn)</argsstring>
        <name>setX</name>
        <param>
          <type>double</type>
          <declname>xIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="30" column="1" bodyfile="MuDip/Dipole.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_dipole_1a743ebc256e831f6b2bebde453a2c6e18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Dipole::setY</definition>
        <argsstring>(double yIn)</argsstring>
        <name>setY</name>
        <param>
          <type>double</type>
          <declname>yIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="31" column="1" bodyfile="MuDip/Dipole.h" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_dipole_1a8162082170fb5d541534d330a56c68ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Dipole::setZ</definition>
        <argsstring>(double zIn)</argsstring>
        <name>setZ</name>
        <param>
          <type>double</type>
          <declname>zIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="32" column="1" bodyfile="MuDip/Dipole.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_dipole_1ad1e29d380b5be78abe1941ffec3bd51d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Dipole::setMoment</definition>
        <argsstring>(std::vector&lt; double &gt; momentIn)</argsstring>
        <name>setMoment</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>momentIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="33" column="1" bodyfile="MuDip/Dipole.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_dipole_1ae0325dcbd0156dd22b2d45dafb29eb47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Dipole::setLatticeConstant</definition>
        <argsstring>(double latticeConstantIn)</argsstring>
        <name>setLatticeConstant</name>
        <param>
          <type>double</type>
          <declname>latticeConstantIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="34" column="1" bodyfile="MuDip/Dipole.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_dipole_1af74377e645f1ab53b5f5c943f627d617" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Dipole::getX</definition>
        <argsstring>()</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="37" column="1" bodyfile="MuDip/Dipole.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_dipole_1a888e62c6df4cbcbee9ceede2d559fb92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Dipole::getY</definition>
        <argsstring>()</argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="38" column="1" bodyfile="MuDip/Dipole.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_dipole_1abac4c549351bbf1caf9cca98862edb7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Dipole::getZ</definition>
        <argsstring>()</argsstring>
        <name>getZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="39" column="1" bodyfile="MuDip/Dipole.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_dipole_1a55d4136b363783c400d870dba2c90d0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Dipole::getMoment</definition>
        <argsstring>()</argsstring>
        <name>getMoment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="40" column="1" bodyfile="MuDip/Dipole.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_dipole_1a2098715d78572a3b1718159be726537f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Dipole::getLatticeConstant</definition>
        <argsstring>()</argsstring>
        <name>getLatticeConstant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="41" column="1" bodyfile="MuDip/Dipole.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_dipole_1a5027f01fb1bd8c04bfb635badee6be61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; Dipole::calculateField</definition>
        <argsstring>(double targetX, double targetY, double targetZ)</argsstring>
        <name>calculateField</name>
        <param>
          <type>double</type>
          <declname>targetX</declname>
        </param>
        <param>
          <type>double</type>
          <declname>targetY</declname>
        </param>
        <param>
          <type>double</type>
          <declname>targetZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the field due to a single dipole at an arbitrary point. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-position of the point at which we wish to evaluate the dipole field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-position of the point at which we wish to evaluate the dipole field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The z-position of the point at which we wish to evaluate the dipole field. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The dipole magnetic field as a vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MuDip/Dipole.h" line="44" column="1" bodyfile="MuDip/Dipole.cpp" bodystart="25" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="MuDip/Dipole.h" line="18" column="1" bodyfile="MuDip/Dipole.h" bodystart="17" bodyend="45"/>
    <listofallmembers>
      <member refid="class_dipole_1a5027f01fb1bd8c04bfb635badee6be61" prot="public" virt="non-virtual"><scope>Dipole</scope><name>calculateField</name></member>
      <member refid="class_dipole_1a84a9daae2bdc84641ad90e0bcfb71e84" prot="public" virt="non-virtual"><scope>Dipole</scope><name>Dipole</name></member>
      <member refid="class_dipole_1a2098715d78572a3b1718159be726537f" prot="public" virt="non-virtual"><scope>Dipole</scope><name>getLatticeConstant</name></member>
      <member refid="class_dipole_1a55d4136b363783c400d870dba2c90d0d" prot="public" virt="non-virtual"><scope>Dipole</scope><name>getMoment</name></member>
      <member refid="class_dipole_1af74377e645f1ab53b5f5c943f627d617" prot="public" virt="non-virtual"><scope>Dipole</scope><name>getX</name></member>
      <member refid="class_dipole_1a888e62c6df4cbcbee9ceede2d559fb92" prot="public" virt="non-virtual"><scope>Dipole</scope><name>getY</name></member>
      <member refid="class_dipole_1abac4c549351bbf1caf9cca98862edb7e" prot="public" virt="non-virtual"><scope>Dipole</scope><name>getZ</name></member>
      <member refid="class_dipole_1a5979595c700fb139b1554e20f1e3b792" prot="private" virt="non-virtual"><scope>Dipole</scope><name>latticeConstant</name></member>
      <member refid="class_dipole_1ad4e670e8a35f7c708ae56d21f6496802" prot="private" virt="non-virtual"><scope>Dipole</scope><name>moment</name></member>
      <member refid="class_dipole_1ae0325dcbd0156dd22b2d45dafb29eb47" prot="public" virt="non-virtual"><scope>Dipole</scope><name>setLatticeConstant</name></member>
      <member refid="class_dipole_1ad1e29d380b5be78abe1941ffec3bd51d" prot="public" virt="non-virtual"><scope>Dipole</scope><name>setMoment</name></member>
      <member refid="class_dipole_1aaa7ffe92c7d2499a485e75c8c77272b8" prot="public" virt="non-virtual"><scope>Dipole</scope><name>setX</name></member>
      <member refid="class_dipole_1a743ebc256e831f6b2bebde453a2c6e18" prot="public" virt="non-virtual"><scope>Dipole</scope><name>setY</name></member>
      <member refid="class_dipole_1a8162082170fb5d541534d330a56c68ee" prot="public" virt="non-virtual"><scope>Dipole</scope><name>setZ</name></member>
      <member refid="class_dipole_1a2ab7b7de768f7eb6c81882a174fec994" prot="private" virt="non-virtual"><scope>Dipole</scope><name>x</name></member>
      <member refid="class_dipole_1a14a22d6575e62c028b28e574b5b44e8e" prot="private" virt="non-virtual"><scope>Dipole</scope><name>y</name></member>
      <member refid="class_dipole_1a670a668fa00c10d6aca4e70a0d4d6be0" prot="private" virt="non-virtual"><scope>Dipole</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
